To: java@relog.ch
Subject: code/misc/Kawa - Scheme compiler and runtime v. 1.0
--------
SUBJECT 
  code/misc/Kawa - Scheme compiler and runtime v. 1.0

URL
  ftp://ftp.cygnus.com/pub/bothner/kawa-1.0.tar.gz  (Code)
  ftp://ftp.cygnus.com/pub/bothner/kawa-1.0-compiled.tar.gz  (Application)

DESCRIPTION
  Kawa (pronounced kava) is a Scheme interpreter written completely in Java.
  Scheme procedures are compiled into Java bytecodes for efficiency.

  The release includes a number of useful classes, including
  a package that makes it easy to create .class files.

  The full sources and documentation is available by anonymous ftp
  from ftp.cygnus.com, in pub/bothner/kawa-1.0.tar.gz.

  The pre-compiled .class files (only) are in the same directory
  in kawa-1.0-compiled.tar.gz.

VERSION
  Kawa 1.0.

CHANGES
  Basically all of R4RS has been implemented.  All the essential
  forms and functions are implemented.  (Exact for limitations
  in call/cc and tail-call-elimination.)  Almost all of the optional
  forms are implemented.  The exceptions are transcript-on,
  transcript-off, and the functions for complex numbers, and
  fractions (exact non-integer rationals).

  The hygienic macros described in the appendix to R4RS are now
  impemented (but only the define-syntax form).

  Compile time errors include line numbers.
  Uncaught exceptions cause a stack trace that includes .scm line numbers.
  This makes it more practical to debug Kawa with a Java debugger.

  New kawac application compiles to one or more .class files.

  The numeric classes have been re-written.  There is partial support
  for bignums (infinite-precision integers), but divide (for example)
  has not been implemented yet.  The representation of bignums uses
  2's complement, where the "big digits" are laid out so as to be
  compatible with the mpn functions of the GNU Multi-Precision library
  (gmp).  (The intent is that a future version of Kawa will support
  an option to use gmp native functions for speed.)

  The kawa application takes a number of useful command-line switches.

  Loading a source file with load now wraps the entire file in
  a lambda (named "atFileLevel").  This is for better error
  reporting, and consistency with compile-file.

  The R5RS multiple value functions values and call-with-values are
  implemented.

  Macros (and primitive syntax) can now be autoloaded as well as procedures.

  Many bug fixes and improvements.

PRICE
  Free for commercial and non-commercial use.

SOURCE
  Included

AUTHOR
  Per Bothner <bothner@cygnus.com>

CONTACT
  Per Bothner <bothner@cygnus.com>.

	--Per Bothner
Cygnus Support     bothner@cygnus.com
