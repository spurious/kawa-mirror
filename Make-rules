SUFFIXES = .java .class .scm .el .lisp

javadir=$(datadir)/java/$(subdir)

GCJ = gcj
JAR = fastjar
GCJFLAGS = -gdwarf-2
OFILES_DIR = $(TO_TOPDIR)
ENABLE_GCJ_COMPILED = $(PACKAGE_FNAME).o
TO_TOPDIR = $(top_builddir)
ENABLE_GCJ_COMPILED = $(OFILES_DIR)/$(PACKAGE_FNAME).o
GCJ_DEPS = $(java_JAVA)

CLEANFILES = $(java_BUILT) *.class *.stamp *.jar

DISABLE_GCJ_COMPILED_KAWA1 = $(JAVA) kawa.repl
ENABLE_GCJ_COMPILED_KAWA1 = $(top_builddir)/kawa1$(exeext)
# Compiler to use for compiling builtin .scm/.el/.cl files.
KAWA1 = $(@GCJ_COMPILED_SELECTED@_KAWA1)
ENABLE_GCJ_COMPILED_CDEP = $(TO_TOPDIR)/kawa1$(exeext)

# Make sure $(KAWA1) is available, if --enable-gcj-compiled.
$(TO_TOPDIR)/kawa1$(exeext):
	cd $(TO_TOPDIR) && $(MAKE) kawa1$(exeext)

$(OFILES_DIR)/$(PACKAGE_FNAME).o:  $(GCJ_DEPS)
	$(GCJ) $(GCJFLAGS) --CLASSPATH=$(TO_TOPDIR) -c \
	  $^ -o $(OFILES_DIR)/$(PACKAGE_FNAME).o

$(OFILES_DIR)/$(PACKAGE_CFNAME).o:  $(GCJ_DEPS)
	$(JAR) cf classes.jar *.class
	$(GCJ) $(GCJFLAGS) --CLASSPATH=$(TO_TOPDIR) -c \
	  classes.jar -o $(OFILES_DIR)/$(PACKAGE_CFNAME).o
	rm classes.jar

scm-classes.stamp: $(java_SCM)
	CLASSPATH=$(top_builddir):$(top_srcdir):$$CLASSPATH \
	  $(KAWA1) -d $(top_builddir) \
	    -P `echo $(PACKAGE_CFNAME)|sed -e s/-/./g`. --module-static -C $?
	echo timestamp > scm-classes.stamp

elisp-classes.stamp: $(java_ELISP)
	CLASSPATH=$(top_builddir):$(top_srcdir):$$CLASSPATH \
	  $(KAWA1) -d $(top_builddir) \
	    -P `echo $(PACKAGE_CFNAME)|sed -e s/-/./g`. --elisp -C $?
	echo timestamp > elisp-classes.stamp
