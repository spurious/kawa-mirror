dnl Process this with autoconf to create configure
AC_INIT([kawa],[1.9.3]) dnl Also update build.xml.
AC_CONFIG_SRCDIR([doc/kawa.texi])

AM_MAINTAINER_MODE
AC_CANONICAL_TARGET([])

AM_INIT_AUTOMAKE

dnl AC_ARG_WITH(classpath,[  --with-classpath          Path to Java classes], classpath=$withval, classpath=$$CLASSPATH)
AC_ARG_ENABLE(kawa-frontend,
  [  --enable-kawa-frontend  Build "kawa" front-end program using readline],
  enable_kawa_frontend=$enableval, enable_kawa_frontend=no)

AC_ARG_WITH(gcj,
  AS_HELP_STRING(--with-gcj,Compile Kawa using GCJ (GNU Compiler for Java)))

AC_ARG_WITH(gcj-dbtool,
  AS_HELP_STRING(--with-gcj-dbtool,Compile Kawa using GCJ and gcj-dbtool))

AC_ARG_WITH(libtool,
  AS_HELP_STRING(--with-libtool, Use libtool))

AC_ARG_ENABLE(xml,
  AS_HELP_STRING(--disable-xml,Don't build support for XML processing),
  enable_xml=$enableval, enable_xml=yes)

AC_ARG_WITH(servlet,
  AS_HELP_STRING(--with-servlet@<:@=servlet-api.jar@:>@,Build support for generating servlets))

AC_ARG_WITH(XQTS,
  AS_HELP_STRING(--with-XQTS@<:@=XQTS-path@:>@,Support XQuery Test Suite))

AC_ARG_ENABLE(echo2,
  AS_HELP_STRING(--enable-echo2,Enable support for the Echo2 web toolkit),
  enable_echo2=$enableval, enable_echo2=yes)

AC_ARG_ENABLE(jemacs,
  AS_HELP_STRING(--enable-jemacs,Build JEmacs))

AC_ARG_ENABLE(brl,
  AS_HELP_STRING(--enable-brl,Build BRL emulation and KRL))

AC_ARG_WITH(swing,
  AS_HELP_STRING(--with-swing,Assume Swing is available (default on)))

AC_ARG_WITH(swt,
  AS_HELP_STRING(--with-swt,Assume SWT is available))

AC_ARG_WITH(awt,
  AS_HELP_STRING(--with-awt,Assume AWT is available (default on)))

AC_ARG_WITH(sax2,
  AS_HELP_STRING(--with-sax2, Assume SAX2 is available (default on)))

AC_ARG_WITH(java-source,
  AS_HELP_STRING(--with-java-source=NUM,Assume functionality of given Java/JDK version))

with_java_source=`echo ${with_java_source} | tr A-Z a-z`
case "/${with_java_source}/" in
  /1/) JAVA_SOURCE=1 ;;
  /2/) JAVA_SOURCE=2 ;;
  /4/) JAVA_SOURCE=4 ;;
  /4x/) JAVA_SOURCE=4x ;;
  /5/) JAVA_SOURCE=5 ;;
  /6/) JAVA_SOURCE=6 ;;
  /1.1*/) JAVA_SOURCE=1 ;;
  /1.2*/) JAVA_SOURCE=2 ;;
  /1.3*/) JAVA_SOURCE=2 ;;
  /1.4*+jaxp1.3/) JAVA_SOURCE=4x ;;
  /1.4*/) JAVA_SOURCE=4 ;;
  /gcj4/) JAVA_SOURCE=4x ;;
  /1.5*/) JAVA_SOURCE=5 ;;
  /1.6*/) JAVA_SOURCE=6 ;;
  //) JAVA_SOURCE=4 ;;
  /*/) AC_MSG_ERROR([Invalid version for --with-java-version.
  (Must be 1, 2, 5, 6, or a JDK version such as 1.4.)]) ;;
esac
AC_SUBST(JAVA_SOURCE)

if test -z "$with_sax2" ; then
  case "$JAVA_SOURCE" in
  1|2|3) with_sax2="no";;
  esac
fi

AC_PROG_INSTALL
AC_PROG_LN_S

AC_EXEEXT
AC_OBJEXT

AC_PROG_CC
AC_PROG_CXX

TOP_BUILDDIR=`pwd`

test "${with_gcj_dbtool}" = "yes" -a -z "${with_gcj}" && with_gcj="yes"
case ${with_gcj} in
  yes)
    test -z "$enable_kawa_frontend" && enable_kawa_frontend="yes"
    test -z "${with_gcj_dbtool}" && with_gcj_dbtool=no

    GCJ_COMPILED_SELECTED=ENABLE_GCJ_COMPILED
    GCJ_SELECTED=WITH_GCJ
    JAVA=${JAVA-gij}
    JAVAC=${JAVAC-"gcj -C"}

    # AM_PROG_GCJ isn't good enough, we have to roll our own.
    # AC_CHECK_TOOL(GCJ, gcj)
    LT_AC_PROG_GCJ
    test -z "$GCJ" && AC_MSG_ERROR([no acceptable gcj found in \$PATH])
    if test "x${GCJFLAGS-unset}" = xunset; then
       GCJFLAGS="-g -O2"
    fi
    AC_SUBST(GCJFLAGS)

   _AM_DEPENDENCIES(GCJ)
    ;;
  *)
    GCJ_COMPILED_SELECTED=DISABLE_GCJ_COMPILED
    GCJ_SELECTED=WITHOUT_GCJ
    JAVA=${JAVA-java}
    JAVAC=${JAVAC-javac}
    dnl needed to match _AM_DEPENDENCIES
    am__fastdepGCJ_TRUE='#'
    ;;
esac
JAVACFLAGS=${JAVACFLAGS--g}

# Partly for compatibility (--enable/--disable-servlet was the old option);
# partly to allow --with-servlet=path-to-jar --disable-servlet.
# we essentially default enable-servlet to with-servlet. But we don't
# want to clutter up configure --help with --enable-servlet.
enable_servlet=${enable_servlet-${with_servlet}}

AM_CONDITIONAL(WITH_GCJ, test "$with_gcj" = "yes")
AM_CONDITIONAL(WITH_GCJ_DBTOOL, test "$with_gcj_dbtool" = "yes")
AM_CONDITIONAL(WITH_GCJ_NO_DBTOOL,
  test "$with_gcj" = "yes" -a "$with_gcj_dbtool" != "yes")
AM_CONDITIONAL(ENABLE_ECHO2, test "$enable_echo2" = "yes")
AM_CONDITIONAL(ENABLE_BRL, test "$enable_brl" = "yes")
AM_CONDITIONAL(ENABLE_JEMACS, test "$enable_jemacs" = "yes")
AM_CONDITIONAL(ENABLE_XML, test "$enable_xml" = "yes")
AM_CONDITIONAL(ENABLE_SERVLET,
  test "$enable_servlet" != "" -a "$enable_servlet" != "no")
AM_CONDITIONAL(WITH_SWING, test "$with_swing" != "no")
AM_CONDITIONAL(WITH_SWT, test "$with_swt" = "yes")
AM_CONDITIONAL(WITH_AWT, test "$with_awt" != "no")
AM_CONDITIONAL(WITH_SAX2, test "$with_sax2" != "no")
AM_CONDITIONAL(WITH_XQTS, test "$with_XQTS" != "" -a "$with_XQTS" != "no")
AM_CONDITIONAL(ENABLE_KAWA_FRONTEND, test "$enable_kawa_frontend" = "yes")
AM_CONDITIONAL(WITH_LIBTOOL, test "$with_libtool" = "yes")

JEMACS_VERSION=`echo $VERSION | sed  -e 's/^1/0/'`
BYTECODE_VERSION="$VERSION"

pathsep=':'
filesep='/'

case ${with_servlet} in
  yes) ;;
  no) ;;
  "") ;;
  *) conf_classpath=${with_servlet}${pathsep}$conf_classpath ;;
esac

case ${with_sax2} in
  yes) SAX2_PREPROCESS="+SAX2";;
  no) SAX2_PREPROCESS="-SAX2";;
  *) SAX2_PREPROCESS=""
esac

XQTS_PATH=${with_XQTS:XQTS}
AC_SUBST(XQTS_PATH)
AC_SUBST(SAX2_PREPROCESS)
AC_SUBST(conf_classpath)
AC_SUBST(pathsep)
AC_SUBST(filesep)

AC_SUBST(JAVA)
AC_SUBST(JAVAC)
AC_SUBST(JAVACFLAGS)
#These don't do anything, because Make-rules can't contain autoconf
#substitutions.  Perhaps fix when new automake is out.
#AC_SUBST(GCJ) AC_SUBST(GCJFLAGS)
AC_SUBST(GCJ_COMPILED_SELECTED)
AC_SUBST(GCJ_SELECTED)
AC_SUBST(TOP_BUILDDIR)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(JEMACS_VERSION)
AC_SUBST(BYTECODE_VERSION)
AC_SUBST(SHELL)

Make_rules="$srcdir/Make-rules"
AC_SUBST_FILE(Make_rules)
AC_CONFIG_LINKS(
  gnu/xquery/testsuite/outline.xml:gnu/xquery/testsuite/outline.xml.in
  gnu/xquery/testsuite/tab.xml:gnu/xquery/testsuite/tab.xml.in
  gnu/xquery/testsuite/bib.xml:gnu/xquery/testsuite/bib.xml.in
  gnu/xquery/testsuite/auction.xml:gnu/xquery/testsuite/auction.xml.in
  gnu/xquery/testsuite/book1.xml:gnu/xquery/testsuite/book1.xml.in
  gnu/xquery/testsuite/report1.xml:gnu/xquery/testsuite/report1.xml.in
  gnu/xquery/testsuite/reviews.xml:gnu/xquery/testsuite/reviews.xml.in
  gnu/xquery/testsuite/items.xml:gnu/xquery/testsuite/items.xml.in
  gnu/xquery/testsuite/bids.xml:gnu/xquery/testsuite/bids.xml.in
  gnu/xquery/testsuite/users.xml:gnu/xquery/testsuite/users.xml.in
  testsuite/scribble.html:testsuite/scribble.html.in)

AC_CONFIG_FILES([Makefile gnu/bytecode/Makefile gnu/math/Makefile
  gnu/lists/Makefile gnu/text/Makefile gnu/mapping/Makefile gnu/expr/Makefile
  gnu/kawa/util/Makefile gnu/kawa/reflect/Makefile 
  gnu/kawa/functions/Makefile gnu/kawa/servlet/Makefile
  gnu/xml/Makefile gnu/kawa/xml/Makefile
  gnu/kawa/xslt/Makefile gnu/kawa/sax/Makefile
  gnu/brl/Makefile gnu/kawa/brl/Makefile
  gnu/kawa/lispexpr/Makefile gnu/kawa/slib/Makefile gnu/ecmascript/Makefile
  gnu/commonlisp/Makefile gnu/commonlisp/lang/Makefile
  gnu/commonlisp/lisp/Makefile gnu/commonlisp/testsuite/Makefile
  gnu/jemacs/lang/Makefile gnu/jemacs/buffer/Makefile
  gnu/jemacs/lisp/Makefile gnu/jemacs/testsuite/Makefile
  gnu/jemacs/swing/Makefile gnu/jemacs/swt/Makefile
  kawa/Makefile kawa/lang/Makefile kawa/standard/Makefile kawa/lib/Makefile
  gnu/q2/Makefile gnu/q2/lang/Makefile
  gnu/xquery/Makefile gnu/xquery/lang/Makefile
  gnu/xquery/util/Makefile gnu/xquery/testsuite/Makefile
  gnu/kawa/ant/Makefile
  gnu/kawa/models/Makefile gnu/kawa/swingviews/Makefile
  gnu/kawa/swtviews/Makefile
  doc/Makefile testsuite/Makefile bin/Makefile])
AC_OUTPUT
