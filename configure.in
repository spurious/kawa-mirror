dnl Process this with autoconf to create configure
AC_INIT(doc/kawa.texi)

AM_INIT_AUTOMAKE(kawa, 1.6.97)

AM_MAINTAINER_MODE
AC_PROG_CC
AC_EXEEXT
AC_OBJEXT
AC_CANONICAL_HOST

AC_ARG_PROGRAM
dnl AC_ARG_WITH(classpath,[  --with-classpath          Path to Java classes], classpath=$withval, classpath=$$CLASSPATH)
AC_ARG_ENABLE(kawa-frontend,
  [  --enable-kawa-frontend  Build "kawa" front-end program using readline],
  enable_kawa_frontend=$enableval, enable_kawa_frontend=no)

AC_ARG_WITH(gcj,
  [  --with-gjc              Compile Kawa using GCJ (GNU Compiler for Java)])

AC_ARG_ENABLE(xml,
  [  --disable-xml           Don't build support for XML processing],
  enable_xml=$enableval, enable_xml=yes)

AC_ARG_ENABLE(servlet,
  [  --enable-servlet        Build support for generating servlets],
  enable_servlet=$enableval, enable_servlet=no)

AC_ARG_WITH(java-collections,
  [  --with-java-collections Assume Java collections (java.util.List) is available])

AC_ARG_WITH(java-references,
  [  --without-java-references  Don't use java.lang.ref],
  with_java_references=$withval, with_java_references=yes)

AC_ARG_WITH(swing,
  [  --with-swing            Assume Swing (Java Foundation Classes) is available])

AC_ARG_WITH(awt,
  [  --with-awt              Assume AWT is available (default on)])

AC_PROG_INSTALL
#AC_PROG_MAKE_SET

dnl We must have the absolute path to the build directory.
TOP_BUILDDIR=`pwd`

case ${with_gcj} in
  yes)
    GCJ_COMPILED_SELECTED=ENABLE_GCJ_COMPILED
    GCJ_SELECTED=WITH_GCJ
    JAVA=${JAVA-gij}
    JAVAC=${JAVAC-"gcj -C"}
    LT_AC_PROG_GCJ
    test "${with_awt}" = "" && with_awt=no
    ;;
  *)
    GCJ_COMPILED_SELECTED=DISABLE_GCJ_COMPILED
    GCJ_SELECTED=WITHOUT_GCJ
    JAVA=${JAVA-java}
    JAVAC=${JAVAC-javac}
    test "${with_awt}" = "" && with_awt=yes
    ;;
esac

AM_CONDITIONAL(WITH_GCJ, test "$with_gcj" = "yes")
AM_CONDITIONAL(ENABLE_XML, test "$enable_xml" = "yes")
AM_CONDITIONAL(ENABLE_SERVLET, test "$enable_servlet" = "yes")
AM_CONDITIONAL(WITH_JAVA_REFERENCES, test "$with_java_references" = "yes")
AM_CONDITIONAL(WITH_SWING, test "$with_swing" = "yes")
AM_CONDITIONAL(WITH_AWT, test "$with_awt" = "yes")
AM_PROG_LIBTOOL

if test $enable_kawa_frontend = yes ; then
  if test "$with_gcj" = yes ; then
    kawa_bin="kawa-bin kawa"
  else
    kawa_bin=kawa
  fi
fi

case ${with_java_collections} in
  yes)
    JAVA_COLLECTIONS_SELECTED=WITH_JAVA_COLLECTIONS
    ;;
  *)
    JAVA_COLLECTIONS_SELECTED=WITHOUT_JAVA_COLLECTIONS
    ;;
esac
  
case ${with_swing} in
  yes)
    extra_java='$(java_SWING)'
    SWING_SELECTED=WITH_SWING
    ;;
  *)
    extra_java=''
    SWING_SELECTED=WITHOUT_SWING
    ;;
esac
  
case ${with_awt} in
  no) AWT_SELECTED=WITHOUT_AWT ;;
  *)  AWT_SELECTED=WITH_AWT ;;
esac

case ${enable_xml} in
  yes)  XML_SELECTED=XML_ENABLED ;;
  *)  XML_SELECTED=XML_DISABLED ;;
esac
  
JEMACS_VERSION=`echo $VERSION | sed  -e 's/^1/0/'`

AC_SUBST(JAVA)
AC_SUBST(JAVAC)
#These don't do anything, because Make-rules can't contain autoconf
#substitutions.  Perhaps fix when new automake is out.
#AC_SUBST(GCJ) AC_SUBST(GCJFLAGS)
AC_SUBST(kawa_bin)
AC_SUBST(XML_SELECTED)
AC_SUBST(JAVA_COLLECTIONS_SELECTED)
AC_SUBST(AWT_SELECTED)
AC_SUBST(SWING_SELECTED)
AC_SUBST(GCJ_COMPILED_SELECTED)
AC_SUBST(GCJ_SELECTED)
AC_SUBST(extra_java)
AC_SUBST(TOP_BUILDDIR)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(JEMACS_VERSION)
AC_SUBST(SHELL)
Make_rules="$srcdir/Make-rules"
AC_SUBST_FILE(Make_rules)
AC_LINK_FILES(gnu/xquery/testsuite/tab.xml.in, gnu/xquery/testsuite/tab.xml)

AC_OUTPUT(Makefile gnu/Makefile gnu/bytecode/Makefile gnu/math/Makefile
  gnu/lists/Makefile gnu/text/Makefile gnu/mapping/Makefile gnu/expr/Makefile
  gnu/kawa/Makefile gnu/kawa/util/Makefile gnu/kawa/reflect/Makefile 
  gnu/kawa/functions/Makefile gnu/kawa/servlet/Makefile
  gnu/xml/Makefile gnu/kawa/xml/Makefile gnu/kawa/brl/Makefile
  gnu/kawa/lispexpr/Makefile gnu/kawa/slib/Makefile gnu/ecmascript/Makefile
  gnu/commonlisp/Makefile gnu/commonlisp/lang/Makefile
  gnu/commonlisp/lisp/Makefile gnu/commonlisp/testsuite/Makefile
  gnu/jemacs/Makefile gnu/jemacs/lang/Makefile gnu/jemacs/buffer/Makefile
  gnu/jemacs/lisp/Makefile gnu/jemacs/testsuite/Makefile
  kawa/Makefile kawa/lang/Makefile kawa/standard/Makefile kawa/lib/Makefile
  gnu/xquery/Makefile gnu/xquery/lang/Makefile
  gnu/xquery/util/Makefile gnu/xquery/testsuite/Makefile
  gnu/kawa/ant/Makefile
  doc/Makefile testsuite/Makefile bin/Makefile)
