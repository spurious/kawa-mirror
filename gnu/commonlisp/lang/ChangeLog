2005-05-08  Per Bothner  <per@bothner.com>

	* CommonLisp.java: Keep environ field set to clispEnvironment.
	(getNewEnvironment): Remove method.

2005-04-19  Per Bothner  <per@bothner.com>

	* CommonLisp.java (registerEnvironment): Use 'instance' field rather
	than creating a new instance.

2005-03-29  Per Bothner  <per@bothner.com>

	* CommonLisp.java: Initalize various static fields,
	including 'instance', in a static block, so they can be final.
	Set/restore current environment, since needed for loadClass.
	(initLisp): New method.
	(lispCounter): Remove - use Language.env_counter.
	(getNewEnvironment): New method.

2005-03-23  Per Bothner  <per@bothner.com>

	* Lisp2.java (importLocation): Remove kludge for GCJ/classpath.
	Remove no-longer-needed try-catch.

2005-03-17  Per Bothner  <per@bothner.com>

	* Lisp2.java (importLocation): Add kludge to work around GCJ bug.

	* Lisp2.java (importLocation): New method.
	* CommonLisp.java (<init>): Use importLocation.

2005-03-17  Per Bothner  <per@bothner.com>

	*  CLispReader.java (getReadTable): Remove method.
	(clispReadTable): Remove field.
	* CommonLisp.java (createReadTable): New method.

2005-02-25  Per Bothner  <per@bothner.com>

	* defvar.java (scanForDefinitions): Mark new declaration IS_DYNAMIC.

2005-02-24  Per Bothner  <per@bothner.com>

	* CommonLisp.java (registerEnvironment): Use new setDefaults method.
	(<init>): Don't get Environment - might cause NullPointerException.

2005-02-12  Per Bothner  <per@bothner.com>

	* defun.java (rewriteForm): Use setSymbol(Object), since
	setName(Object) has been removed from LambdaExp.

	* defun.java: Use SetExp's setBinding method.

	* defvar.java: Likewise.

2005-01-29  Per Bothner  <per@bothner.com>

	* Lisp2.java: Extend LispLanguage rather than LispInterpreter.

	* Lisp2.java (fromLangSymbol): New method.

2004-12-20  Per Bothner  <per@bothner.com>

	* Lisp2.java (selfEvaluatingSymbol): New method.

2004-12-05  Per Bothner  <per@bothner.com>

	Update for new Symbol/Location handling.
	* Lisp2.java (defun, getEnvPropertyFor): New methods.
	(defineFunction, getNewEnvironment): Removed.
	(getSymbol): Rename to asSymbol - to avoid confusion.
	* CommonLisp.java (defun): Remove methods - moved to Lisp2.
	(<init>): Various updates.
	(defineFormFieldValue): Remove - no longer need to override.
	* CLispReader.java: Update getSymbol->asSymbol.
	* SymbolTable.java: Remove class.
	* Makefile.am: Update accordingly.
	* Symbols.java: Update methods.
	(plistGet, plistPut, plistRemove): Moved to
	gnu.mapping.PropertyLocation.
	(setValueBinding, getPrintName): Remove methods.
	* function.java (rewriteForm): Not that we PREFER_BINDING2.

2004-11-10  Per Bothner  <per@bothner.com>

	* CommonLisp.java (CommonLisp): Remove definitions of 'and' and 'or'.
	Instead used definitions in kawa.lib.std_syntax.

2004-11-06  Per Bothner  <per@bothner.com>

	* CommonLisp.java (<init>): Also load prim_syntax.
	This defines if, so we don't need removed kawa.standard.ifp.

2004-07-20  Per Bothner  <per@bothner.com>

	* CLispReader.java:  Remove unused import statements.
	* defun.java:  Use static syntax to invoke static methods.
	* defvar.java:  Likewise.

2004-01-09  Per Bothner  <per@bothner.com>

	* CommonLisp.java (registerEnvironment):  Update setCurrent->setGlobal.

2003-10-12  Per Bothner  <per@bothner.com>

	* prog1.java:  New class, extends Syntax.
	* function.java:  New class, extends Syntax.
	* Makefile.am (java_sources):  Update accordingly.
	* CommonLisp.java (<init>):  Define function, prog1, prog2.

	* defun.java (rewriteForm):  Simplify.
	* defvar.java (rewriteForm):  Handle Symbols properly.

2003-10-08  Per Bothner  <per@bothner.com>

	* CommonLisp.java (<init>):  Minor simplification/optimization.

2003-04-18  Per Bothner  <per@bothner.com>

	* Lisp2.java (getNamespaceOf):  New method.

2002-11-15  Per Bothner  <per@bothner.com>

	* defun.java (scanForDefinitions):  Use name as is, even if Symbol.
	(rewriteForm):  Is name is a Symbol, use it as is, not as String.
	* defvar.java (scanForDefinitions):  Use name as is, even if Symbol.
	* setq.java (rewriteForm):  Is name is a Symbol, use it as is.

2002-10-28  Per Bothner  <per@bothner.com>

	* Symbol.java:  Renamed to Symbols.java.
	Removed inheritance, and make constructor private.

2002-02-15  Per Bothner  <per@bothner.com>

	* Lisp2.java (defineFunction):  New method.

2002-01-31  Per Bothner  <per@bothner.com>

	* CommonLisp.java (loadClass, defineAll):  Now inherited.
	(defineFromFieldValue):  New, called from inherited defineAll.

2001-11-15  Per Bothner  <per@bothner.com>

	* CommonLisp.java (<init>):  Remove unwanted error message.

2001-07-18  Per Bothner  <per@bothner.com>

	* Lisp2.java:  Now extends new LispInterpreter class.

	* CommonLisp.java (loadClass):  Remove debugging remnant.

2001-06-19  Per Bothner  <per@bothner.com>

	* SymbolTable.java (make):  If not registered, create.
	(readResolve):  Inline old make definition.
	* CommonLisp.java (<init>):  Use SymbolTable.make.

	* Lisp2.java (TRUE):  Is now a Binding, not the String "t".
	* CommonLisp.java (<init>):  Fix initialization of t and nil.

	* Symbol.java (isBound. getBinding):  Handle Binding as symbol.

	* Symbol.java (propertyLists):  Remove static fieldf.
	(getPropertyList, setPropertyList):  Remove static methods.

2001-06-17  Per Bothner  <per@bothner.com>

	* Lisp2.java:  New class, extends Interpreter.
	Move some shared CommonLisp/ELisp stuff here.
	Symbols are now instances of Binding, not String.
	* CommonLisp.java:  New extends Lisp2.
	Remove dependencies on gnu.jemacs (and thus Swing) code.
	Use ../lisp/PrimOps rather than gnu.jemacs.lang.*Ops.
	* Symbol.java:  Moved from gnu.jemacs.lang.
	* SymbolTable.java:  Renamed from gnu.jemacs.lang.Package.
	* Makefile.am (java_sources):  Renamed from java_JAVA and update.
	* defun.java (scanForDefinitions):  Handle symbols as Bindings.
	* defvar.java (scanForDefinitions):  Likewise.
	* setq.java (rewriteForm):  Likewise.

2001-06-03  Per Bothner  <per@bothner.com>

	* CommonLisp.java (writeFormat, displayFormat):  New fields.
	(getFormat): New method.
	(<init>):  Define procedures prin1 and princ.
	(print):  Removed method.

2001-05-16  Per Bothner  <per@bothner.com>

	* CommonLisp.java:  Update to use LangPrimType.

2001-05-01  Per Bothner  <per@bothner.com>

	Steps to making jemacs depends on commonlisp rather than vice versa.
	* UnwindProtect.java:  Moved from ../../../gnu/jemacs/lang.
	* defun.java:  Moved from ../../../gnu/jemacs/lang.
	* defvar.java:  Moved from ../../../gnu/jemacs/lang.
	* setq.java:  Moved from ../../../gnu/jemacs/lang.
	* Makefile.am (java_JAVA):  Update accordingly.
	* CommonLisp.java:  Likewise update.
	(getTypeFor):  Remove Emacs-specific types.

2001-04-24  Per Bothner  <per@bothner.com>

	* CLispReader.java:  New class, extends LispReader.
	* CommonLisp.java:  Change ELispReader/ELisp to CLispReader/CommonLisp.
	* Makefile.am (java_JAVA):  Add CommonLisp.java.
	Inlcude Make-rules and support gcj-compilation.

2001-03-08  Per Bothner  <per@bothner.com>

	* CommonLisp.java:  Update for new gnu.lists.
	(asNumber):  Don't allow Position.
	(getName):  Return "CommonLisp" (not "Emacs-Lisp"!).

2000-10-14  Per Bothner  <per@bothner.com>

	* CommonLisp.java (getInstance): Restore current Environment when done.

2000-10-12  Per Bothner  <per@bothner.com>

	* CommonLisp.java (<init>):  Update classes used for eq and equal.

2000-06-25  Per Bothner  <per@bothner.com>

	New package.
	* CommonLisp.java:  New class, extends Interpreter.
	* Makefile.am:  New.
