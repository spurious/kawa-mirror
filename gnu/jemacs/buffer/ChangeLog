2000-04-23  Per Bothner  <per@bothner.com>

	* Marker.java (Marker(Marker)):  Fix it.
	* emacs.scm (force-mode-line-update):  Define as explicit function,
	so elisp can find it in the function name space.
	(point-at-bol):  Fix off-by-one error.
	(save-excursion):  Remove  (now handled by elisp SaveExcursion class).

2000-04-17  Per Bothner  <per@bothner.com>

	* BufferContent.java:  No extends gnu.kawa.util.CharBuffer.
	Much of the logic was moved to CharBuffer.
	(class GpaPosition):  Now extends gnu.kawa.util.Position.
	New constructors.
	* Marker.java:  Some re-writing because BufferContent re-written.
	* Buffer.java:  Likewise.
	* Window.java:  Likewise.

	* Mode.java (getBuffer):  New method.
	* ProcessMode.java (writeToInferior, getProcessMark):  New methods.
	* emacs.scm (process?, process-send-string, process-buffer,
	process-mark, get-buffer-process):  New procedures.

2000-04-14  Per Bothner  <per@bothner.com>

	* BufferWriter.java:  Handle escape sequences.
	(resetAttributes, updateStyle, getColor, handleSetCharacterRendition,
	handleOperatingSystemCommand, handleCSICommand, handleEscapeBracket,
	deleteChars, moveColumns, write1):  New methods.
	(write):  Re-write to handle escapes state.
	* InputStreamHandler.java:  New class, extends Thread.

	* BufferKeymap.java (asNonAction):  New method.
	(lookupKey):  Use asNonAction.
	(asAction):  New method.
	(defineKey):  Use asAction.
	(lookupKey):  Only accept default action if getKeyChar() non-zero.
	
	* Marker.java (<init>):  New constructor.
	(forwardChar, backwardChar, currentColumn, moveToColumn, forwardLine):
	New methods, based on code in Buffer.java.
	* Buffer.java (modes):  New field.
	(forwardChar, backwardChar, moveToColumn):  Call BufferMarker method.
	(forwardLine):  New method.
	* emacs.scm (set-keymap-parent, set-keymap-parents, keymap-parent,
	keymap-parents, set-keymap-default-binding, keymap-default-binding,
	marker?):  New procedures.
	(point-at-bol, forward-line):  Re-write to use Buffers's forwardLine.

	* Mode.java:  New class.
	* ProcessMode.java:  New class - extends Mode.
	* TelnetMode.java:  New class - extends ProcessMode.
	* InfProcessMode.java:  New class - extends ProcessMode.
	* Makefile.am (java_WITH_SWING):  Update with new classes.
	* emacs.scm (shell, telnet):  New procedures.

	* emacs.scm (<marker>, <process>, <buffer>, <window>, <frame>,
	<keymap>):  Define as type aliases using define-alias.
	Use these aliases in rest of file.

2000-03-21  Per Bothner  <per@bothner.com>

	* Buffer.java (charHeight, charWidth):  New fields.
	(<init>):  Set charHeight, charWidth.
	* Window.java (getHeightInLines, getWidthInColumns):  New method.
	* emacs.scm (window-height, window-width, window-pixel-height,
	window-pixel-width, window-text-area-pixel-height,
	window-text-area-pixel-width):  New procedures.
	
	* Buffer.java (insert):  Rename to insertString.
	(insert):  New method generalizes old insert.
	(insertAll):  New method.
	* emacs.scm (redraw-modeline, force-mode-line-update):  New.
	(insert):  Genealize to inserting character and varargs.

2000-03-17  Per Bothner  <per@bothner.com>

	* Buffer.java (encoding):  New field.
	(defaultStyle):  New static field.  Use Lucida Sans Typewriter.
	(findFile, save, inserFile):  Set and/or use encoding.
	(<init>):  Set "18n" property to true, for correct bidi handling.
	* Marker.java (insert):  If null style, use Buffer.defaultStyle.

2000-02-27  Per Bothner  <per@bothner.com>

	Various tweaks for better javadoc processing.
	* overview.html:  Renamed to package.html.

	* Window.java (setSelected):  DOn't crash if null frame.

2000-02-26  Per Bothner  <per@bothner.com>

	* ProcAction.java:  Removed, replaced by/renamed to Command.java.
	* Command.java:  New class.
	(command):  New field, replaces proc field.
	(perform):  New static method.
	* Makefile.am, Makefile.in:  Update accordingly.
	* BufferKeymap.java:  Likewise.

	* Buffer.java (display):  New method.
	* Menu.java:  No longer implements ActionListener.
	(menuEntried):  Removed Hashtable field.
	(setMenu):  Use enumerator.  Don't create extra initial separator.
	Add a JComponent as is.
	Create a MenuItem (new class) instead of JMenuItem.
	(actionPerformed):  Moved to MenuItem.
	(class MenuItem):  New non-public class, extends JMenuItem.
	* emacs.scm (find-file-other-window, find-file-other-frame,
	pop-to-buffer, display-window, switch-to-buffer-other-window,
	switch-to-buffer-other-frame):  New procedures.
	(default-menubar):  Do't use literal, so we can use
	function references, rather than function names.


2000-02-26  Simon Josefsson <jas@pdc.kth.se>

	* Menu.java:  New file.
	* Makefile.am, Makefile.in (java_WITH_SWING):  Added Menu.java.
	* Frame.java (menuBar):  New field.
	(setMenuBar):  New method.
	(<init>):  Do setJMenuBar.
	* emacs.scm (current-menybar, default-menubar):  New variables.
	(set-menubar-dirty-flag, set-menubar):  New variables.
	(make-frame):  Call set-menubar.

2000-02-25  Per Bothner  <per@bothner.com>

	* BufferContent.java (class GapUndoableEdit):  Replace field
	startIndex field by an on offset (startOffset).  (This creates
	fewer unneeded positin indexes).

	* BufferKeymap.java (defaultInsertAction):  New static field.
	* InsertAction.java (actionPerformed):  Don't insert backspace.

	* BufferKeymap.java (asKeyStroke):  Handle modifier keys.
	* emacs.scm (emacs-help):  New command, bound ot (control h).
	Add some type declarations.

	* Emacs.java:  Removed.
	* Signal.java (checkQuit):  New method.
	* Makefile.am:  Emacs.java no longer used;  Signal.java is now
	always compiled (even without Swing);  re-orginanize so it all
	works whether or not --with-swing is configured.

	* Marker.java (deleteChar):  Signal if count is out of range.
	Call setDot to (partially) work around what appears to be a Swing bug.

	* Window.java (setBuffer):  Only update position if window is selected.
	(setSelected):  Make the buffer current *before* updatings its point.

2000-02-19  Per Bothner  <per@bothner.com>

	* Buffer.java (point):  Removed - use pointMarker.getOffset() instead.
	(<init>):  Initialize pointMarker here, to a regular marker.
	(getDot):  Just call pointMarker.getOffset.
	(setDot):  Just call pointMarker.set.
	(forwardChar, backwardChar):  Don't use/set curPosition or point.
	* Window.java (setDot):  New method.
	(setSelected, unselect):  Update buffer's curPosition and pointMarker.
	* Marker.java (getOffset):  Call buffer.curPosition.getDot directly.
	(set):  Call buffer.curPosition.setDot directly.
	
	* Buffer.java (remove, removeRegion, removeAll):  New edit methods.

	* Buffer.java (positionToOffset):  New convenience function.

	* BufferReader.java:  New class, extends InPort.
	* MarkerReader.java:  New class, extends InPort.
	* Buffer.java (tabWidth):  New field.
	(charWidth, countColumns, currentColumn, moveToColumn,
	lineStartOffset):  New methods.

	* BufferContent.java (freePositionIndex):  Fix math error.
	(array, gapStart, gapEnd):  Make default protection.
	(scan):  Fix off-by-one error.

	* BufferKeymap.java (asKeyStroke):  Handle named keys.

	* Makefile.am:  New Swing configuration scheme uses @SWING_SELECTED@.
	(java_SWING):  Renamed to java_WITH_SWING. Add new classes.
	(scmclasses.stamp):  New rules to compile emacs.scm.

	* Signal.java (toString):  New method.

	* emacs.scm (goto-line, next-line, previous-line, move-line, insert,
	erase-buffer, delete-region, delete-char, delete-backward-char,
	current-column, move-to-column):  New procedures.

2000-02-11  Per Bothner  <per@bothner.com>

	* BufferContent.java (gapContent):  Fix some small but critical bugs.

	* emacs.scm (lookup-key):  Update as Sequence was to gnu.kawa.util.

2000-02-01  Per Bothner  <per@bothner.com>

	* ReplBuffer.java:  Now need to import gnu.expr.Interpreter.

2000-01-24  Per Bothner  <per@bothner.com>

	* ReplBuffer.java:  Fix kawa.lang.QueueReader ->gnu.text.QueueReader.

2000-01-23  Per Bothner  <per@bothner.com>

	* Makefile.am (EXTRA_DIST):  Added, with emacs.scm overview.html.

1999-12-06  Per Bothner  <per@bothner.com>

	* BufferContent.java (scan):  Add missing int->long cast.
	* emacs.java (point-at-eol):  Use buffer,getDot directly.

	* Buffer.java (getContent, minDot, maxDot, deleteChar, scan):  New.
	* BufferContent.java:  No longer extends GapContent;  now just
	implements AbstractDocument.Content.
	(BEFORE_MARK_KIND, EMACS_MARK_KIND, AFTER_MARK_KIND):  New "enums".
	(array, gapStart, gapEnd):  New fields for buffer-gap implementation.
	(<init>):  New constructors.
	(allocatePositionIndex):  Fix off-by-one-errors.
	Also, we need to adjust indexes array if a new position was inserted.
	(shiftGap, length, charAt, getChars, getString, gapReserve,
	createPosition, dump):  New methods.
	(indexOf, lastIndexOf):  New static helper methods.
	(scan):  New method, converted from XEmacs.
	(GapPosition):  New class.
	(GapUndoableEdit):  New class.
	* Emacs.java (checkQuit):  New method.
	* Marker.java:  Now implements java.swing.text.Position.
	(getDot):  Renamed to getOffset, for compatibility with Position.
	(EMACS_MARK_KIND):  New "enum".  Use it various places.
	(deleteChar):  New method.
	* BufferWriter.java, ReplBuffer.java:  Update getDot -> getOffset.
	* emacs.scm:  Use new <buffer> type specifier.
	(point-min, point-max, buffer-end, buffer-size, point-at-bol,
 	point-at-eol, beginning-of-line, end-of-line, forward-line,
	delete-char):  New procedures.

1999-11-18  Per Bothner  <per@bothner.com>

	* emacs.scm:  In various places, fix <gnu.jemacs.text.Marker>
 	to <gnu.jemacs.buffer.Marker>.
	Partly convert to using newer invoke, make etc functions, instead of
	old primitive-virtual-method etc macros.

1999-09-13  Per Bothner  <per@bothner.com>

	* Buffer.java (current):  New static field.
	(getCurrent, setCurrent):  New static methods.

	* Buffer.java (redStyle, blueStyle):  New styles.
	(redrawModeline):  Make it a little fancier.
	* Modeline.java (<init>):  Take explicit Buffer argument.
	Set background to light gray.
	
	* Buffer.java (insertFile):  Don't set point at end; leave it as was.
	
	* BufferKeymap.java (defaultKeymap):  New static field.
	(globalKeymap):  Make this a new Keymap.

	* Window.java (next, previous):  Remove fields.  Instead use
	awt Component hierarchy.
	(getNextWindow, getOtherWindow, getContainedWindow, getFirstWindow,
 	getLastWindow, getNextWindowInFrame):  New methods.
	(deleteNoValidate, deleteOtherWindows):  New methods.
	(split):  Moved in code from Frame.addWindow.
	* Frame.java (getFirstWindow, getLastWindow, getSelectedFrame,
	getSelectedWindow, otherWindow):  New methods.
	(first):  Remove field.
	(addWindow):  Remove.
	(delete, isLive):  New methods.
	
	* Window.java (selected):  Remove static field.
	(getSelected):  New method - gets window selected in selected Frame.
	(setSelected):  Also make buffer current.
	(warp):  Remove one overloaded method.

	* emacs.scm (read-dialog):  New, creates popup window.
	(read-from-minibuffer):  Redefine as read-dialog.
	(*current-buffer*):  Removed variable.
	(new-window, other-window, delete-frame, frame-selected-window,
	frame-live?, selected-frame):  New procedures.

1999-09-05  Per Bothner  <per@bothner.com>

	Following item from the To-do section of overview.html are now done:
	* Implemented commands to read and save files.
	* We ask for file and buffer names using a dialog pop-up window.
	* Split windows correctly, so that the windows that are not split
	keep their sizes, the windows being split gets split as specified,
	and the frame does not change size.  Now also handles horizonal splits.
	* Fairly good support for  buffer-local keymaps and Emacs-style keymap
	search order.  A new class BufferKeymap manages the active keymaps of
	a buffer.  Multi-key key-sequences are handled.  Pending prefix keys
	are remembered on a per-buffer basis (whereas Emacs does it globally).

	* Frame.java (addWindow):  Support horizontal splitting.
	(ask, toString):  New methods.
	* Window.java:  Now inherits from JTextPane.
	(wrap, getPanel, getWindow, delete, deleteOtherWindows):  New methods.
	* Modeline.java (redraw):  Removed method.  (Not much left ...)

	* Buffer.java (getFileName, setFileName, fileFile, redrawModeline,
	makePointMarkerm getPointMarker, save, insertFile):  New methods.
	* BufferContent.java:  New class; extends GapContent.
	* Marker.java:  Partially re-write to use BufferContent features.
	(hashCode, equals, toString):  New methods.
	(insert):  New methods, moved from Buffer.java.

	* BufferKeymap.java:  New class; implements javax.swing.text.Keymap.
	* Keymap.java:  Removed;  defineKey methods moved to BufferKeymap.
	* InsertAction.java:  New class; extends javax.swing.text.TextAction.
	* FinalAction.java:  New class; extends javax.swing.text.TextAction.
	* PrefixAction.java:  New class; extends javax.swing.text.TextAction.
	* ProcAction.java:  New class;  replaced ProcCommand.
	* ProcCommand.java:  Renamed to ProcAction.java.
	* TooLongAction.java:  New class; extends javax.swing.AbstractAction.
	* CancelledException.java:  New class; extends RuntimeException.

	* BufferWriter.java:  New class; extends java.io.Writer.
	* ReplBuffer.java:  New class; extends Buffer.
	* Signal.java (message):  New static method.
	* Makefile.am, Makefile.in (java_JAVA):  Update for new classes.
	* emacs.scm (open-output-buffer, open-output-marker, make-keymap,
 	keymap-name, current-local-map, use-local-map, lookup-key, find-file,
 	find-file-noselect, save-buffer, write-file, insert-file, make-marker,
 	point-marker, copy-marker, marker-position, marker-buffer, set-marker,
 	buffer-file-name, set-visited-file-name, read-from-minibuffer,
	delete-window, delete-other-windows, switch-to-buffer):
 	New (more-or-less-standard Emacs) procedures.
	(term-send-input, scheme-swing-window):  New non-standard procedures.

1999-08-07  Per Bothner  <per@bothner.com>

	Move from gnu.emacs to gnu.jemacs.buffer.

1999-06-30  Per Bothner  <per@bothner.com>

	* overview.html:  Add "to-do" section.

1999-06-20  Per Bothner  <per@bothner.com>

	* New package.
