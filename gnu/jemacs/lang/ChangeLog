2000-05-22  Per Bothner  <per@bothner.com>

	* SaveExcursion.java (savePointMark, restoreBufferPointMark):  Use
	new getStringContent in Buffer.

	* ELisp.java (getTypeFor):  New method.

2000-05-09  Per Bothner  <per@bothner.com>

	* ELisp.java (<init>):  Create an ObArray rather than an Environment.
	* Makefile.am:  Only build While.java unless --with-swing configured.

	* ObArray.java (getFunction, putFunction, define):  New methods.

	* ELisp.java (booleanType):  New field.
	(getTypeFor):  Use booleanType if "boolean" is requested.

2000-04-22  Per Bothner  <per@bothner.com>

	* ELisp.java (emitPushBoolean):  New method.
	(asNumber, asChar):  New static methods.

	* AddOp.java:  New class (extends ProcedureN) implements '+' and '-'.
	* DivideOp.java:  New class (extends ProcedureN) implements '/'.
	* ArrayOps.scm (length):  New procedure.
	(arrayp):  Declare to return <elisp:boolean>.
	* ListOps.scm:  New file, implements setcar and setcdr.
	* MiscOps.scm:  New file, provides various unimplemented stubs.
	* StringOps.scm:  New file, implements stringp and make-string.
	* defvar.java:  New class, extends Syntax.
	* SaveExcursion.java:  New class, extends Syntax.
	* Makefile.am (java_JAVA, SCMSOURCES):  Add new files.
	* ELisp.java (<init>):  Register some new methods and classes.
	* ELisp.java (getTypeFor):  Handle< elisp:boolean>.

	* ELisp.java (loadClass):  Do not catch ClassNotFoundException.
	(<init>):  Catch and ignore ClassNotFoundException.

	* lambda.java:  Recognize and ignore documentation string.
	Recognize and ignore '(interactive ...)' declaration.
	Make parameter be bound fluidly.

	* NumberOps.scm (%):  New procedure.

	* While.java:  Use new Expression.makeWhile method overload.
	
2000-03-21  Per Bothner  <per@bothner.com>

	* ELisp.java (<init>):  Force kawa.lib.std_syntax to be loaded now.
	Add definition of `progn' (using kawa.standard.begin).

2000-03-17  Per Bothner  <per@bothner.com>

	* ELisp.java:  Inherit from Interpreter directly, not via Scheme.
	(charIsInt):  Moved here from ELispReader.
	(getCharacter):  New /moved ???
	(defun):  If value is Named, set its name, if it doesn't have one.
	(elispCounter):  New static int field.
	(<init>):  Set name using elispCounter.
	Copy over bindings from Scheme.getInstance().
	Add definitions fro ArrayOps.
	Add if, while, let, let*.
	(getNewEnvironment, read, print, getTypeFor):  Copied over from Scheme.
	* ELispReader.java (charIsInt):  Moved to ELisp.
	(readCharacter):  Call ELisp.getCharacter.
	Check for `#\ ' case before calling (new variant of) readEscape.

	* ArrayOps.scm:  New file; defines arrayp, aref, aset, fillarray.
	* While.java:  new class;  extends Syntax.
	* Makefile.am, Makefile.in:  Update for new files.

	* setq.java (rewriteForm):  Set PREFER_BINDING2 flag on SetExp.

2000-02-27  Per Bothner  <per@bothner.com>

	Various tweaks for better javadoc processing.
	* package.html:  New file.

2000-02-11  Per Bothner  <per@bothner.com>

	* ELispReader.java (isDelimiter):  Add '\'' and '#' as delimiters.
	(readSymbol):   Removed, replaced by readAtom.
	(readAtom0, readAtom):  New methods.
	(getReadCase, readNumber, readComplex, numError, readReal):  Remove.
	(readInteger):  New method - just call readAtom0.
	(readObject):  Use readInteger and readAtom as appropriate.
	Handle `:SYMBOL' syntax for uninterned symbols.

	* NumberCompare.java:  New class, extends ProcedureN.
	* NumberOps.scm:  New file.
	* Symbol.java:  Change to inherit from Symbol2.
	(getBinding):  Return Binding2 rather than plain Binding.
	(getFunctionBinding, setFunctionBinding):  New static methods.
	* SymbolOps.scm (set):  Remove duplicate definition.
	(symbol-function, fset):  Update SymbolConstraint -> Symbol.
	* lambda.java (rewrite):  Using a Pattern is overkill.
	* defun.java:  New class;  extends Syntax.
	* Makefile.am (java_JAVA, SCMSOURCES):  Update for new files.

	* ELisp.java (hasSeparateFunctionNamespace, defineAll, defun,
	(registerEnvironment):  New method.
	(<init>):  Define `t', `nil', `<', `<=', `>', `>=', `defun'.

	* FunctionSymbolConstraint.java:  Removed.  No longer needed thanks
	to "Binding2" support in gnu.mapping and gnu.expr.
	* GeneralSymbolConstraint.java:  Likewise.
	* SymbolConstraint.java:  Likewise.
	* UnboundSymbolConstraint.java:  Likewise.
	* ValueSymbolConstraint.java:  Likewise.
	* ObArray.java (valueConstraint, functionConstraint):  Removed fields.

2000-01-31  Per Bothner  <per@bothner.com>

	* ELisp.java (nilExpr):  New constant.
 	(isTrue, booleanObject):  New methods (overriding Interpreter).
	(loadClass):  New method.
	(ELisp):  New constructor.

	* ELispReader.java (isDelimiter):  New overriding method -
	the chars '[' and ']' also need to be treated as delimiters.
	(readVector):  Fix to use '[' and ']' as delimiters.
	(readObject):  Call readVector after seeing '['.
	No longer recognize #(...) or #f #t #eNUM. or #iNUM.
	
	* lambda.java:  New file, extends Syntax.
	* setq.java:  New file, extends Syntax.
	* SymbolOps.scm:  New file.
	* Makefile.am (java_JAVA):  Add lambda.java, setq.java.
	Add rules to build SymbolOps.class from SymbolOps.scm.

	* Symbol.java (isBound):  Avoid creating unneeded binding.
	(getBinding, setValueBinding, getPrintName):  New methods.
	* SymbolConstraint.java (defineAll):  New method.
	(getFunctionBinding, setFunctionBinding):  New methods.
	* FunctionSymbolConstraint.java (environment):  Change type.

1999-09-08  Per Bothner  <per@bothner.com>

	* ELisp.java (getName):  New method - set the "language name".

1999-09-05  Per Bothner  <per@bothner.com>

	* ELispReader.java (readEscape):  Moved to SourceMessages.

1999-08-07  Per Bothner  <per@bothner.com>

	Move from gnu.elisp to gnu.jemacs.lang.

1999-07-15  Per Bothner  <per@bothner.com>

	* Elisp.java:  Now extends kawa.standard.Scheme (for now).
	(getSymbol):  Change return type to Object.
	Return a String (instead of Binding), except 'nil is List.Empty.
	(getString):  Return an FString, rather than a String.
 	(getLexer, getInstance):  New methods.
	* ELispReader.java (<init>(InPort, SourceMessages)):  New constructor.

1999-06-23  Per Bothner  <per@bothner.com>

	* ELisp.java:  New class.
	* Makefile.am, Makefile.in (java_JAVA):  Add ELisp.java.

1999-06-20  Per Bothner  <per@bothner.com>

	* ELispReader.java (readSymbol):  Don't recognize keywords.

Sun Mar 21 18:17:43 1999  Per Bothner  <bothner@Magnus.Cygnus.COM>

	* streams.sc:  Removed (merged into kawa/lib/emacs.scm).
	* Makefile.am:  Update accordingly.

Sun Mar 21 11:04:19 1999  Per Bothner  <bothner@Magnus.Cygnus.COM>

	New directory.
	* ELispReader.java:  New LispReader sub-class.
	* Makefile.am, Makefile.in  New.
	* streams.scm:  New file.
