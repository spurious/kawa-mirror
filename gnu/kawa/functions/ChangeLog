2001-10-05  Per Bothner  <per@bothner.com>

	* DisplayFormat.java:  Update for CharSequence -> CharSeq renaming.

	* LispFormat.java (ListNewlineFormat_:  New class.
	(<init>):  New code handles "~_" (Common Lisp's conditional newline).

2001-09-24  Per Bothner  <per@bothner.com>

	* MultiplyOp.java:  Renamed from kawa.standard.multiply_oper.
	* DivideOp.java:  Renamed from kawa.standard.divide_oper.
	* NumberCompare.java:  Moved from kawa.standard.NumberCompare.
	* Makefile.am (java_sources):  Add new classes.

2001-08-24  Per Bothner  <per@bothner.com>

	* AddOp.java (compile):  Optimize additions of doubles and DFloNum.

2001-08-16  Per Bothner  <per@bothner.com>

	* ValuesMap.java:  New procedure, extends CpsProcedure.
	* Makefile.am:  Update accordingly.

2001-07-18  Per Bothner  <per@bothner.com>

	* Setter.java:  New implements CanInLine.
	(inline):  Uncomment.

	* DisplayFormat.java:  Now extends gnu.kawa.util.AbstractFormat.

2001-06-17  Per Bothner  <per@bothner.com>

	* DisplayFormat.java (writeObject):  Handle Binding (as symbol).

2001-06-03  Per Bothner  <per@bothner.com>

	* DisplayFormat.java:  New class, extends Procedure and implements
	FormatToConsumer.  Contains code to format for Lisp-like languages.
	* Makefile.am:  Update accordingly.

	* LispFormat.java (LispFreshlineFormat.format):  Use freshLine method.

2001-05-16  Per Bothner  <per@bothner.com>

	* AddOp.java:  Use LangPrimType instead of plain PrimTypes.
	Fixes bug reported 05-10 by Walter C. Pelissero <walter@pelissero.org>.

2001-04-09  Per Bothner  <per@bothner.com>

	* Makefile.am (SUFFIXES):  Removed redundant macro.

2001-03-08  Per Bothner  <per@bothner.com>

	* AddOp.java:  Implement Inlineable (in addition to CanInline).
	If Target is expecting a primitive type(such as <int>) do the operation
	using primitive arithmetic if safe.
	(compile, getReturnType):  New methods.

	* Apply.java, Assoc.java, Format.java, LispFormat.java, MakeList.java,
	Member.java, ParseFormat.java:  Update LList.length->listLength,
	elementAt->get, length->size, open.

2000-10-12  Per Bothner  <per@bothner.com>

	* Apply.java (apply(CallContext)):  Use CallContext's getArgs method.

	* MakeProcedure.java:  New class.
	* Makefile.am:  Update accordingly.

	* AddOp.java:  Implement gnu.expr.CanInline.
	(inline):  New method.
	(pairwise):  New static help method.

	* AddOp.java:  New class, replaces kawa.standard.plus_oper
	and kawa.standard.minus_oper.
	* Makefile.am:  Update accordingly.

	* Apply.java (apply):  Temporarily remove use of CallCOntext's getArgs.
	* Setter.java:  Temporarily comment out CanInline and inline method.

2000-10-11  Per Bothner  <per@bothner.com>

	New package, for Procedures for Scheme/Lisp.
	* Apply.java:  Renamed from kawa/standard/apply.java.
	(apply):  New static field.
	* Assoc.java:  Renamed from kawa/standard/ass.java.
	* Format.java : Renamed from kawa/standard/format.java.
	* IsEq.java:  Renamed from kawa/standard/eq_p.java.
	(<init>):  Add name parameter.
	* IsEqual.java:  Renamed from kawa/standard/equal_p.java.
	(<init>):  Add name parameter.
	* IsEqv.java:  Renamed from kawa/standard/eqv_p.java.
	(<init>):  Add name parameter.
	* LispFormat.java:  Renamed from kawa/standard/LispFormat.java.
	* MakeList.java:  Renamed from kawa/standard/list_v.java.
	(list):  New static field.
	* Member.java:  Renamed from kawa/standard/mem.java.
	* ObjectFormat.java:  Renamed from kawa/standard/ObjectFormat.java.
	* ParseFormat.java:  Renamed from kawa/standard/ParseFormat.java.
	* Setter.java:  Renamed from kawa/standard/setter.java.
	Now implements gnu.expr.CanInline.
	(inline):  new method.
	(setterProcedure):  Field renamed to setter.
	(setter):  New static method.
	* Makefile.am, Makefile.in:  New files.
