2003-09-24  Per Bothner  <per@bothner.com>

	* TreeList.java (copyToList):  Revert use of gnu.xml.NodeTree.

2003-09-23  Per Bothner  <per@bothner.com>

	* LList.java (makeList):  Generalize parameter to java.util.List,
	but only if JAVA2.
	* FVector.java (<init>)(Sequence)):  Likewise.

2003-09-14  Per Bothner  <per@bothner.com>

	* AbstractSequence.java (nextMatching):  New method.
	* TreeList.java (newMatching):  New method, based on nextMatchingChild.
	(nextMatchingChild):  Remove.

2003-09-09  Per Bothner  <per@bothner.com>

	* AbstractSequence.java (nextIndex):  Use getIndexDifference.
	* TreeList.java (getIndexDifference):  New method.

2003-09-04  Per Bothner  <per@bothner.com>

	* TreeList.java (dump):  Print attribute type as well as name.

2003-08-02  Per Bothner  <per@bothner.com>

	* AbstractSequence.java (firstAttributePos):  New method.
	* TreeList.java (firstAttributePos):  New method.

	* AttributePredicate.java (isInstance):  Remove xpos parameter.

	* TreeList.java (createPos):  Just call createRelativePos.
	(createRelativePos):  Fix some corner cases.

	* TreeList.java (posToDataIndex):  Fix some corner cases.

	* TreeList.java (copyToList):  New method.
	This is a kludge, since it creates a gnu.xml.NodeTree.
	(getPosNext):  Use use copyToList when copying to new TreeList.

	* TreeList.java (compare):  Simplify and fix using posToDataIndex.

2003-07-26  Per Bothner  <per@bothner.com>

	* TreeList.java (POSITION_PAIR_FOLLOWS):  Make protected.

	* TreeList.java (dump):  Also print identityHashCode.

2003-07-23  Per Bothner  <per@bothner.com>

	* AbstractSequence.java (stableCompare):  New method.
	(compare):  New static 4-argument method.

2003-07-10  Per Bothner  <per@bothner.com>

	* AbstractSequence.java (consumeNext):  Hopefully more efficient.

	* TreeList.java (dump):  Write out class name.

2003-05-09  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in, Convert.java.in, SeqPosition.java.in,
	Sequence.java.in, SimpleVector.java.in:  Renamed to ...
	* AbstractSequence.java, Convert.java, SeqPosition.java, Sequence.java,
	SimpleVector.java:  New files, using new JAVA1/JAVA2 framework.
	* Makefile.am:  Updated accordingly.
	Various cleanups followed.

	* LList.java (class LListPostion):  Moved to ...
	* LListPosition.java:  .. new file, as it is also used by Pair.java.

2003-05-03  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in (addAll):  Fix typo in non-collections case.

2003-04-08  Per Bothner  <per@bothner.com>

	* Sequence.java.in (EofClass): New non-public class.
	(eofValue):  Use EofClass instance.

2003-04-05  Per Bothner  <per@bothner.com>

	* GeneralArray.java (toString):  Two new methods.

2003-03-13  Per Bothner  <per@bothner.com>

	* TreeList.java (consumeIRange):  Fix typo in BASE_URI handling.

2003-03-02  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in (getPosPrevious):  Make public.
	* SubSequence.java (getPosPrevious):  Likewise.
	* TreeList.java (getPosPrevious):  Likewise.

2003-02-19  Per Bothner  <per@bothner.com>

	* TreeList.java (oindex):  Field moved here from ValuesStack.
	(availOject):  Removed field
	(find(Object), find(Object,Object)):  Methods moved here
	from ValuesStack.  This fixes quadratic behavior, at the cost of
	not sharing duplicate indexes.

2003-02-13  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in (parentPos, baseUriOfPos):  New methods.
	* TreeList.java (BASE_URI):  New constant.
	(writeBaseUri):  New method, to add base-uri property.
	(baseUriOfPos):  New method.
	(gotoChildrenStart):  Skip BASE_URI for documents and groups.
	(consumeIRange, dump):  Handle BASE_URI.
	(toString, stringValue, nextNodeIndex, nextMatchingChild):
	Skip BASE_URI.
	(parentPos):  New method.

	* TreeList.java (curerntBeginGroup):  Re-named to currentParent.
	(beginDocument, endDocument):  Set and clear currentParent.

2003-01-05  Per Bothner  <per@bothner.com>

	Replace position triples (including xpos), with positions pairs,
	using just an 'int' "Pos" cookie to identify a position.
	* PositionContainer.java:  Remove no-longer-useful interface.
	* AbstractSequence.java.in (fillPosRange):  New method.
	(fill):  Re-write to use nextPos+setPosPrevious.
	(elements, iterator):  Use getIterator and make final.
	(getIterator):  Default implementation uses startPos.
	(indexOf, removeAll, retailAll, toArray, hashCode):  Re-implement using
	startPos+nextPos+getPosPrevious.
	(contains):  Re-implement to just call indexOf.
	(containsAll):  Fix bug.
	(listIterator):  Use new SeqPosition constructor.
	(add, releasePosition, copyPosition, gotoNext, gotoPrevious):
	Remove methods taking a PositionContainer.
	(addPos):  New method.
	(removePos):  Renamed from remove.  Remove xpos parameter.  Update.
	(removePosRange):  Renamed from remove.  Remove xpos parameters.
	(isAfter):  Rename to isAfterPos.  Remove xpos parameter.
	(getNext):  Renamed to getPosNext.  Remove xpos parameter.
	(getPrevious):  Renamed to getPosPrevious.  Remove xpos parameter.
	(subSequence):  Renamed to subSequencePos.  Remove xpos parameter.
	(setNext):  Renamed to setPosNext.  Remove xpos parameter.
	(setPrevious):  Renamed to setPosPrevious.  Remove xpos parameter.
	(consume):  Renamed to consumePosRange.  Remove xpos parameters.
	(getIndexDifference, nextIndex, getContainingSequenceSize, hasNext,
	fromEndIndex, getNextKind, getNextTypeName, getNextTypeObject, equals,
	compare, hasPrevious, consumeNext):  Remove xpos parameter.
	(remove(int)): Re-implement using createPos+getNext+removePos.
	(remove(Object)):  Likewise.
	(clear):  Re-implement using removePos.
	(createPos):  New abstract method.
	(makePosition, createPosition, makeRelativePosition,
	makeStartPosition, makeEndPosition):  Remove methods.
	(createRelativePos, startPos, endPos, releasePos, copyPos, nextPos,
	previousPos, firstChildPos):  New methods.
	(subList):  Re-implement using createPos.
	(toString(String,StringBuffer)):  New helper method.
	* SeqPosition.java.in:  No longer implement PositionContainer.
	(getPositionInt, getPositionPtr, setPosition, setSequence,
	countPositions):  Remove PositionContainer methods.
	(xpos):  Remove field.
	(toString):  Don't print xpos.
	(hasNext, getNextKind, getNextTypeName, getNextTypeObject, hasPrevious,
	getNext, nextIndex, fromEndIndex, getContainingSequenceSize, isAfter,
	previousIndex, remove, add, init, release):  Don't pass xpos to
	corresponding sequence method.
	(<init>(AbstractSequence,int,boolean)):  Re-implement using createPos.
	(<init>(AbstractSequence,int,Object)):  Remove xpos parameter.
	(make):  Likewise.
	(copy):  New method.
	(gotoStart):  Re-implement using setPos and startPos.
	(gotoEnd):  Re-implement using setPos and endPos.
	(gotoChildrenStart):  New method.
	(hasMoreElements):  Use hasNext and make final.
	(gotoNext):  Make non-final.  Use nextPos.
	(gotoPrevious):  New method.
	(next):  Use getNext and gotNext  methods in this class, not sequence.
	(previous):  Use getPosPrevious and new gotoPrevious method.
	(nextElement):  Make final, define in terms of next.
	(nextIndex):  Make non-final.
	(getNext, getPrevious)   Use renamed getPosNext, getPosPrevious.
	(init, release):  Update for renamed releasePos, copyPos.
	(setNext, setPrevious):  New methods.
	(set)  Use them.
	(setPos, setPos):  New methods.
	(init):  Renamed to set.
	(getPos):  New method.
	(various):  Use getPos instead of accessing ipos directly.
	* SimpleVector.java.in (createPosition):  Rename to createPos.
	(isAfter):  Rename to isAfterPos.  Remove xpos parameter.
	(getNext):  Rename to getPosNext.  Remove xpos parameter.
	(remove):  Rename to consumePosRange.  Remove xpos parameters.
	(consume):  Rename to getPosNext.  Remove xpos parameter.
	(nextIndex, consumeNext, getNextKind):  Remove xpos parameter.
	(nextPos):  New method.
	(add):  Remove methods taking a PositionContainer.
	(addPos):  New method.
	* U8Vector.java, U16Vector.java, U32Vector.java, U64Vector.java,
	S8Vector.java, S16Vector.java, S32Vector.java, S64Vector.java,
	F32Vector.java, F64Vector.java, FString.java, FVector.java, 
	BitVector.java (consumeNext):  Remove xpos parameter.
	(remove):  Rename to consumePosRange.  Remove xpos parameters.
	* FVector.java (consumePosRange):  New method.
	* GapVector.java (add):  Remove methods taking a PositionContainer.
	(addPos):  New method.
	(nextIndex, nextIndex, getNextKind):  Remove xpos parameter.
	(remove):  Rename to consumePosRange.  Remove xpos parameters.
	(clear):  Remove - use inherited method.
	(createPosition):  Rename to createPos.
	(consume):  Renamed to consumePosRange.  Rmeove xpos parammeters.
	(fill):  Replaced by fillPosRange.
	* StableVector.java (createPosition):  Rename to createPos.
	(startPos, endPos, nextPos. copyPos, addPos):  New methods.
	(makeStartPosition, makeEndPosition, gotoNext, copyPosition, add):
	Removed methods.
	(isAfter):  Rename to isAfterPos.
	(hasNext, nextIndex):  Remove xpos parameter.
	(releasePosition):  Renamed to releasePos.  Remove xpos parameter.
	(remove):  Renamed to removePosRange.  Rmeove xpos parammeters.
	(consume):  Renamed to consumePosRange.  Rmeove xpos parammeters.
	(fillPosRange):  New method.
	* CharBuffer.java (delete):  Use createPos+removePos.
	* GeneralArray.java (createPos):  New method.
	* SubSequence.java:  No longer implement PositionContainer.
	(xpos0, xpos1):  Remove fields.
	(<init>):  New constructor.
	Update various methods.
	* PositionManager.java:  New class.
	* ExtPosition.java:  New class, extends SeqPosition.
	* ExtSequence:  New abatract class; extends AbstacrtSequence.
	* ElementPredicate.java (isInstance):  Renamed to isInstancePos,
	remove xpos parameter.
	* GroupPredicate.java:  Remove xpos parameter.
	* LList.java:  new inherit from ExtSequence.
	(getIterator, createPos, createRelativePos):  New methods.
	(various):  Other updates; some logic moved to LListPosition.
	(makePosition):  Removed PositionContainer method.
	(class LListPosition):  New, inherits from ExtPosition.
	* Pair.java (hasNext, nextPos, getPosNext, getPosPrevious, lastPair,
	getPosPrevious, lastPaur):  New methods.
	* TreeList.java (consumeRange):  Rebane to consumeIRange.
	Fix bug in INT_FOLLOWS/FLOAT_FOLLOWS/LONG_FOLLOWS/DOUBLE_FOLLOWS cases.
	(consumePosRange):  New method.
	(POSITION_TRIPLE_FOLLOWS):  Renamed to POSITION_PAIR_FOLLOWS.
	(posToDataIndex, firstChildPos, toSrring, compare, hashCode):
	New methods.
	(various):  Update various methods.
	* PositionConsumer.java (consume):  Take SeqPosition, not TreePosition.
	(wrotePosition):  Remove xpos parameter.
	* TreePosition.java (xpos):  "New" field, now private and here.
	(xstack):  Removed.
	Remove PosutionContainer methods.
	Various updates.
	* TreePositionList.java:  Removed, since it was unused.
	* Makefile.am:  Update accordingly.
	* package.html:  Update for new world.
	
2003-01-06  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in (isEmpty):  Fix obvious thinko.

2003-01-05  Per Bothner  <per@bothner.com>

	* LList.java (toString): New method.

2002-09-21  Per Bothner  <per@bothner.com>

	* TreeList.java (getIntN):  Mask with 0xFFFF, in case low word is < 0.
	(getLongN):  Likewise, and force shifts to be long.

2002-07-24  Per Bothner  <per@bothner.com>

	* LList.java (getPrevious, setPrevious):  New methods.

2002-06-10  Per Bothner  <per@bothner.com>

	* Array.java (isEmpty, getRowMajor, getLowBound, getSize, transpose):
	New methods.
	* GeneralArray.java:  Extend AbstractSequence.
	Generalize to arbitrary lower bound.
	(makeSimple, get, getRowMajor, getLowBound, getSize, transpose):
	New methods.
	* Sequence.java.in:  Don't implement Array.
	* SimpleVector.java.in:  Do implement Array.
	(getRowMajor, transpose):  New methods.
	* AbstractSequence.java.in (getLowBound(int), getSize(int)):  New.
	* GeneralArray1.java:  New class, extends GeneralArray and Sequence.
	* Makefile.am: (java_sources):  Update accordingly. 

	* FVector.java (<init>):  Don't set initial value if it is null.

2002-05-06  Per Bothner  <per@bothner.com>

	* TreeList.java (find(Object), find (Object,Object)):  Make public.

	* TreePosition.java (depth):  New field.
	(set, getRoot, push, popNoRelease, getAncestor, dump):  Use depth.

2002-04-18  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in (createPosition):  New semi-abstract method.
	(makePosition):  New default implementation uses createPosition.
	* GapVector.java (makePosition):  Remove - just use inherited default.
	(createPosition):  New method.
	* SimpleVector.java.in (makePosition):  Likewise remove.
	(createPosition):  New method.
	* StableVector.java (makePosition):  Likewise remove.
	* TreePositionList.java (makePosition):  Likewise remove.
	(createPosition):  New method.
	* TreePosition.java (<init>):  Just call super constructor.
	* TreeList.java (makePosition):  Likewise remove.
	(createPosition):  New method.

	* TreeList.java (stringValue):  Use nextNodeIndex.

2002-04-06  Per Bothner  <per@bothner.com>

	* NodePredicate.java:  New class, extends ElementPredicate.
	* GroupPredicate.java:  Change to extend NodePredicate.
	* AttributePredicate.java:  New class, extends NodePredicate.
	* Makefile.am (java_sources);  Add new classes.
	* TreeList.java (nextMatchingChild):  Generalize to take en
	ElementPredicate instead of a GroupPredicate.

	* TreeList.java (nextNodeIndex):  New method.
	(consumeNext):  Call  nextNodeIndex.

	* TreeList.java (hasNext):  Return false also for END_DOCUMENT.

	* AbstractSequence.java.in (hasNext):  Make public.
	* GapVector.java (hasNext):  Likewise.
	* LList.java (hasNext):  Likewise.
	* StableVector.java (hasNext):  Likewise.

2002-03-19  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in (remove):  Make public.
	* SimpleVector.java.in (remove):  Make public.
	* StableVector.java (makePosition):  Make public.

2002-02-16  Per Bothner  <per@bothner.com>

	* UnescapedData.java:  Implement Consumable..
	(consume):  New method.

2002-02-05  Per Bothner  <per@bothner.com>

	* TreeList.java (getNextTypeIndex):  Fix bad BEGIN_GROUP_LONG handling.

	* TreeList.java (nextMatchingChild):  New method.

	* ElementPredicate.java:  New interface.
	* GroupPredicate.java:  New interface, extends ElementPredicate.java.
	* Makefile.am (java_sources):  Update accordingly.

2002-02-01  Per Bothner  <per@bothner.com>

	* PrintConsumer.java (writeInt):  Add missing startNumber call.

2002-01-23  Per Bothner  <per@bothner.com>

	* ConsumerWriter.java:  Extends Writer.
	* PrintConsumer.java:  New class, extends PrintWriter.
	* Makefile.am (java_sources):  Add new classes.

2002-01-21  Per Bothner  <per@bothner.com>

	* UnescapedData.java:  New class.
	* Makefile.am (java_sources):  Add UnescapedData.java.

2002-01-07  Per Bothner  <per@bothner.com>

	* Consumer.java (beginDocument, endDocument):  New methods.
	* FilterConsumer.java (beginDocument, endDocument):  New methods.
	* TreeList.java (END_DOCUMENT):  New code.
	(BEGIN_DOCUMENT):  Now followed by pointer to END_DOCUMENT.
	(various methods):  update as appropriate.

	* FilterConsumer.java (skipping):  New boolean field.
	(Consumer methods):  Do nothing if skipping is true.
	* VoidConsumer.java:  New extends FilterConsumer.
	(Consumer methods):  Remove - use inherited versions.

2001-12-29  Per Bothner  <per@bothner.com>

	* TreeList.java (consumeRange):  Fix indexing bug for BEGIN_GROUP_LONG.

	* TreeList.java (stringValue):  Fix indexing bugs.
	Support POSITION_TRIPLE_FOLLOWS.

2001-12-24  Per Bothner  <per@bothner.com>

	* TreeList.java (get):  Add working implementation.

	* FString.java (getChars):  New method.

2001-11-24  Per Bothner  <per@bothner.com>

	* TreeList.java (writeObject):  Special-case SeqPosition.
	* SeqPosition.java.in (<init>):  New constructor.
	(toString):  Handle null sequence.

	* FString.java (getChars):  New method, writes to StringBuffer.

2001-11-18  Per Bothner  <per@bothner.com>

	* TreeList.java (dump):  Better output for POSITION_TRIPLE_FOLLOWS.

2001-11-12  Per Bothner  <per@bothner.com>

	* TreeList.java (dump):  Print group and attribute type objects.

2001-11-06  Per Bothner  <per@bothner.com>

	* TreeList.java (stringValue):  Make attributes and long groups work.

2001-10-25  Per Bothner  <per@bothner.com>

	* AbstractSequence.java.in (getNextKind, getNextTypeName,
	getNextTypeObject, gotoNext, gotoChildrenStart):  Make public.
	* GapVector.java, LList.java, SimpleVector.java.in,  StableVector.java,
	SubSequence.java, TreeList.java:  Update accordingly.

2001-10-17  Per Bothner  <per@bothner.com>

	* Sequence.java.in (ATTRIBUTE_VALUE):  New constant.
	* TreeList.java (getNextKind, getNext):  Handle BEGIN_ATTRIBUTE_LONG.
	(attrStart):  New field.
	(beginAttribute, endAttribute):  Use it to correctly set end pointer.
	(gotoAttributesStart, gotoAttributesStart):  New methods.
	(nextDataIndex):  Return index *after* END_ATTRIBUTE.

2001-10-05  Per Bothner  <per@bothner.com>

	* CharSequence.java:  Renamed to CharSeq.java to avoid conflict with
	similar interface java.lang.CharSequence in JDK 1.4beta.
	* CharSeq.java:  New interface renamed fro CharSequence.
	(toString):  Added new method - matching JDK 1.4 CharSequence.
	* CharBuffer.java (toString):  New method.
	* CharBuffer.java, FString.java, Strings.java, Makefile.am:
	Update for CharSequence -> CharSeq renaming.

2001-08-15  Per Bothner  <per@bothner.com>

	* Sequence.java.in (DOCUMENT_VALUE):  New constant.

	* AbstractSequence.java.in (toArray):  Removed debugging catch.

	* SeqPosition.java.in (make):  New static method
	* TreeList.java (consumeRange):  On POSITION_TRIPLE_FOLLOWS
	create new SeqPostion, not TreePosition.
	(getNext):  Likewise.

	* TreePosition.java (stringValue):  New methods.

	* TreeList.java (nextDataIndex):  Fix off-by-one error.

	* SeqPosition.java.in (toString):  New method

	* TreeList.java (BEGIN_DOCUMENT):  New constant.
	(beginDocument, endDocument):  New methods.
	(consumeRange, getNextKind, getNextTypeObject, nextDataIndex,
	dump):  Handle BEGIN_DOCUMENT.

	* TreeList.java (size):  Re-write to use nextDataIndex rather
	than less efficient and broken consumeRange.
	(gotoChildrenStart(int)):  New overloaded method.
	(consumeRange):  Remove maxSteps parameter.
	(consumeNext):  Use nextDataIndex.
	(getNextKind, getNextTypeObject):  Make public.

2001-07-15  Per Bothner  <per@bothner.com>

	* Consumer.java:  Replace endAttributes by endAttribute.
	* VoidConsumer.java:  Likewise.
	* FilterConsumer.java:  Likewise.
	* TreeList.java (END_ATTRIBUTES):  Removed constant.
	(END_ATTRIBUTE):  New constant.
	(beginGroup):  No longer emit END_ATTRIBUTES word.
	(beginAttribute):  Write END_ATTRIBUTE word.
	(endAttributes):  Removed.
	(endAttribute):  New method.
	(consumeRange, gotoChildrenStart, hasNext, getNextKind, getNext,
	nextDataIndex, dump):  Update accordingly.
	* FVector.java:  Remove endAttributes call.

	* PositionConsumer.java (writePosition):  New method.
	* TreeList.java: Implement PositionConsumer.
	(consume, writePosition):  New methods.
	(POSITION_REF_FOLLOWS, POSITION_TRIPLE_FOLLOWS):  New constants.
	(consumeRange, getNextKind, getNext, nextDataIndex, dump):
	Support new constants.

	* TreeList.java (<init>):  New constructors.
	(isEmpty):  New method.
	(consumeRange):  Fix logic checking maxSteps.
	(getNext):  Handle BEGIN_GROUP_SHORT/_LONG using copy constructor.
	* TreePositionList.java (added):  New helper method,.
	(consume):  Replace old logic by new 'added' method..
	(writePosition):  New method.
	(expand):  New helper method.

	* AbstractSequence.java.in (toArray):  Change 0-argument version
	to use correct implementation rather than using 1-argument version.
	* AbstractSequence.java.in (consume)  Likewise.
	* LList.java (consume):  Likewise.

	* FormatToConsumer.java (beginGroup, endGroup):  New methods.

2001-06-17  Per Bothner  <per@bothner.com>	

	Various improvements to documentation comments.
	* package.html:  Additional text.

2001-06-03  Per Bothner  <per@bothner.com>

	* CharSequence.java (consume(int,int,Consumer)):  New method.
	* CharBuffer.java (consume):  Implement.
	* SimpleVector.java.in (consume):  Likewise.

	* SimpleVector.java.in (get, intAt, longAt, set):
	Fix off-by-one errors: > should be >=.

	* SimpleVector.java.in (getNext):  New method.

	* AbstractSequence.java.in (consumeNext):  New method.
	(consume):  Fix to use nextElement.
	* U8Vector.java, F32Vector.java, F64Vector.java, U8Vector.java,
	S16Vector.java, S32Vector.java, S64Vector.java, S8Vector.java,
	U16Vector.java, U32Vector.java, U64Vector.java, U8Vector.java,
	FString.java, SimpleVector.java.in (consumeNext):  New methods.
	* TreeList.java (consumeStep):  Replaced by new consumeNext method.

	* U16Vector.java, U8Vector.java (consume):  Mask off value.

	* FString.java (consume):  Just do plain write.

	* FormatToConsumer.java:  New interface.
	* Makefile.am (java_sources):  Add FormatToConsumer.java.

	* LList.java (print):  Remove unused method.
	(consume):  Re-write to generate more robust output.

2001-05-16  Per Bothner  <per@bothner.com>

	* TreeList.java (getNext):  Better error for default unsupported case.

2001-05-09  Per Bothner  <per@bothner.com>

	* Makefile.am (install-data-am):  Removed bogus dependency.

	* TreeList.java (data, hasNext):  Make public.
	(getNext):  New method.

	* PairWithPosition.java (<init>):  Remove constructor taking a
	LineBufferedReader to remove dependency on gnu.text.

2001-04-24  Per Bothner  <per@bothner.com>

	* Convert.java:  Moved to ...
	* Convert.java.in:  New file.
	(parseDouble):  New static convenience method.
	* Makefile.am:  Update to generate Convert.java from Convert.java.in.

2001-04-22  Per Bothner  <per@bothner.com>

	* Convert.java (booleanToObject, objectToBoolean):  New methods.
	(toObject, toBoolean):  New static methods.

	* BitVector.java:  New class, extends SimpleVector.
	* Makefile.am:  Update accordingly.

2001-04-10  Per Bothner  <per@bothner.com>

	* TreePosition.java (copy constructor):  Positions are numbered
	with the most recent (a leaf) as 0.

	* TreePosition.java (gotoParent):  Handle null sequence.

2001-04-09  Per Bothner  <per@bothner.com>

	* Sequence.java.in (isEmpty):  New method.
	(EOF_VALUE, INT_U8_VALUE, INT_S8_VALUE, INT_U16_VALUE, INT_S16_VALUE,
	INT_U32_VALUE, INT_S32_VALUE, INT_U64_VALUE, INT_S64_VALUE,
	FLOAT_VALUE, DOUBLE_VALUE, BOOLEAN_VALUE, TEXT_BYTE_VALUE, CHAR_VALUE,
	OBJECT_VALUE, GROUP_VALUE):  New constants.
	* AbstractSequence.java.in (getNextKind, getNextTypeName,
	getNextTypeObject):  New methods.
	* SeqPosition.java.in (getNextKind, getNextTypeName,
	getNextTypeObject):  New methods.
	* SimpleVector.java.in (getNextKind, getElementKind):  New methods.
	* GapVector.java (getNextKind): New method.
	* FString.java, F32Vector.java, F64Vector.java, S16Vector.java,
	S32Vector.java, S64Vector.java, S8Vector.java, U16Vector.java,
	U32Vector.java, U64Vector.java, U8Vector.java (getElementKind):
	New method.

	* SubSequence.java (getNext, getPrevious):  Fix thinko.
	(getNextKind):  New method.
	* TreeList.java (endGroup, consumeRange):  Fix thinkos.
	(makePosition, gotoChildrenStart, getNextKind, getNextTypeIndex,
	getNextTypeName, getNextTypeObject, makeRelativePosition,
	nextDataIndex):  New methods.

	* TreePosition.java: Implement Cloneable.
	(TreePosition(TreePosition)):  New copy constructor.
	(clone, set):  New method.
	(push):  Handle case of depth == -1.
	(clear):  Improve.

	* FilterConsumer.java:  New class, implements Consumer.
	* PositionConsumer.java:  New interface.
	* TreePositionList.java:  New class.
	* Makefile.am:  Add new classes.

2001-04-04  Per Bothner  <per@bothner.com>

	* VoidConsumer.java:  New class, implements Consumer.
	* Makefile.am (java_sources):  Add VoidConsumer.java.

2001-04-02  Per Bothner  <per@bothner.com>

	* TreeList.java:  Make it extend AbstractSequence.
	Made various fields public for convenience that probably shouldn't be.
	(clear, size, makePosition, get, hasNext):  New method.
	(ensureSpace):  Set data to new array.  Oops.
	(beginGroup, beginAttribute):  New versions that just take an index.

2001-03-23  Per Bothner  <per@bothner.com>

	* Makefile.am:  The automake Java support does not handle "built"
	Java sources, so roll our own.

2001-03-08  Per Bothner  <per@bothner.com>

	New package.
	Many of the classes are based on ones that used to be in gnu.kawa.util.
