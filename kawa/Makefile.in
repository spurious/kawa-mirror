# Makefile.in generated automatically by automake 1.1g from Makefile.am

# Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@
TOP_BUILDDIR = @TOP_BUILDDIR@
PACKAGE = @PACKAGE@
VERSION = @VERSION@
EXTRA_OBJ = @EXTRA_OBJ@
JAVA_VERSION = @JAVA_VERSION@
EXTRA_MISC = @EXTRA_MISC@

AUTOMAKE_OPTIONS = foreign

SUBDIRS = lang standard lib

SUFFIXES = .java .class

bin_SCRIPTS = kawa

# Sufix for batch files.
BAT=

# Use an environment variable for CLASSPATH so we pick up standard classes:
CLASSPATH_ENV = CLASSPATH=..:$(srcdir)/..:$$CLASSPATH
JAVAC = javac
JAVA = java

javadir=$(prefix)/java/$(subdir)

OBJ = Shell.class repl.class

java_DATA=$(OBJ)

# Following only works for GNU make, but is only needed for make dist or TAGS.
SOURCES = $(OBJ:.class=.java)

CLEANFILES=$(OBJ) kawa$(BAT) tmp
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
SCRIPTS =  $(bin_SCRIPTS)

DATA =  $(java_DATA)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) \
	$(TEXINFOS) $(MANS) $(EXTRA_DIST)

TAR = tar
default: all


$(srcdir)/Makefile.in: @MAINT@Makefile.am $(top_srcdir)/configure.in
	cd $(top_srcdir) && automake --strictness=foreign --cygnus $(subdir)/Makefile

Makefile: $(top_builddir)/config.status $(srcdir)/Makefile.in $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

install-binSCRIPTS: $(bin_SCRIPTS)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(bindir)
	list="$(bin_SCRIPTS)"; for p in $$list; do \
	  if test -f $$p; then \
	    $(INSTALL_SCRIPT) $$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else if test -f $(srcdir)/$$p; then \
	    $(INSTALL_SCRIPT) $(srcdir)/$$p \
	      $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; fi; \
	done

uninstall-binSCRIPTS:
	list="$(bin_SCRIPTS)"; for p in $$list; do \
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`; \
	done

install-javaDATA: $(java_DATA)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(javadir)
	list='$(java_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    $(INSTALL_DATA) $(srcdir)/$$p $(javadir)/$$p; \
	  else if test -f $$p; then \
	    $(INSTALL_DATA) $$p $(javadir)/$$p; \
	  fi; fi; \
	done

uninstall-javaDATA:
	list='$(java_DATA)'; for p in $$list; do \
	  rm -f $(javadir)/$$p; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive install-info-recursive \
check-recursive installcheck-recursive info-recursive dvi-recursive \
mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	for subdir in $(SUBDIRS); do		\
	  target=`echo $@ | sed s/-recursive//`; \
	  (cd $$subdir && $(MAKE) $$target)	\
	   || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

tags: TAGS

tags-recursive:
	list="$(SUBDIRS)"; for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) tags); \
	done

TAGS: tags-recursive $(HEADERS) $(SOURCES) $(CONFIG_HEADER) \
		$(TAGS_DEPENDENCIES)
	tags=; \
	here=`pwd`; \
	for subdir in $(SUBDIRS); do \
	  test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	done; \
	test -z "$(ETAGS_ARGS)$(CONFIG_HEADER)$(SOURCES)$(HEADERS)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags $(CONFIG_HEADER) $(SOURCES) $(HEADERS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = kawa
distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
	for subdir in $(SUBDIRS); do		\
	  test -d $(distdir)/$$subdir		\
	  || mkdir $(distdir)/$$subdir		\
	  || exit 1;				\
	  chmod 755 $(distdir)/$$subdir;	\
	  (cd $$subdir && $(MAKE) distdir=../$(distdir)/$$subdir distdir) \
	    || exit 1; \
	done
info: info-recursive
dvi: dvi-recursive
check: all-am
	$(MAKE) check-recursive
installcheck: installcheck-recursive
install-info: install-info-recursive
all-am: $(SCRIPTS) $(DATA) Makefile

install-exec-am: install-binSCRIPTS

install-data-am: install-javaDATA

uninstall-am: uninstall-binSCRIPTS uninstall-javaDATA

install-exec: install-exec-recursive install-exec-am
	$(NORMAL_INSTALL)

install-data: install-data-recursive install-data-am
	$(NORMAL_INSTALL)

install: install-recursive install-exec-am install-data-am
	@:

uninstall: uninstall-recursive uninstall-am

all: all-recursive all-am

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install
installdirs: installdirs-recursive
	$(mkinstalldirs)  $(bindir) $(javadir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-tags mostlyclean-generic

clean-am:  clean-tags clean-generic mostlyclean-am 

distclean-am:  distclean-tags distclean-generic clean-am 

maintainer-clean-am:  maintainer-clean-tags maintainer-clean-generic \
		distclean-am 

mostlyclean:  mostlyclean-am mostlyclean-recursive

clean:  clean-am clean-recursive

distclean:  distclean-am distclean-recursive
	rm -f config.status

maintainer-clean:  maintainer-clean-am maintainer-clean-recursive
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default uninstall-binSCRIPTS install-binSCRIPTS \
uninstall-javaDATA install-javaDATA install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info dvi check \
installcheck install-info all-am install-exec-am install-data-am \
uninstall-am install-exec install-data install uninstall all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


.java.class:
	$(CLASSPATH_ENV) $(JAVAC) -d .. $<

# This redundant rule is needed for some versions of make, but not GNU make.
repl.class:  $(srcdir)/repl.java
	$(CLASSPATH_ENV) $(JAVAC) -d .. $<

kawa$(BAT):
	echo '#!/bin/sh' >tmp
	echo 'KAWALIB=$${KAWALIB-$(prefix)/java}' >>tmp
	echo 'CLASSPATH=$${KAWALIB}:$${CLASSPATH-$(CLASSPATH)}' >>tmp
	echo 'export CLASSPATH' >>tmp
	if JAVA=`which $(JAVA)`; then true; else JAVA=$(JAVA); fi; \
	  echo 'exec $${JAVA-'$${JAVA}'} kawa.repl "$$@"' >>tmp
	chmod +x tmp
	mv tmp kawa$(BAT)

all: $(OBJ) kawa

# Forve repl.class to be built before sub-dirs.
# Specifically, lib needs repl to compile scm files.
all-recursive:  repl.class
.SUFFIXES:
.SUFFIXES: .java .class

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
